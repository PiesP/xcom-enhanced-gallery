{
  "name": "xcom-enhanced-gallery",
  "version": "0.2.4",
  "description": "Media viewer and download functionality for X.com",
  "license": "MIT",
  "type": "module",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "dev": "vite --mode development",
    "build": "npm run build:prod",
    "build:dev": "vite build --mode development --logLevel warn",
    "build:prod": "vite build --mode production --logLevel warn",
    "build:all": "npm run clean && npm run build:dev && npm run build:prod && npm run build:copy",
    "build:copy": "node -e \"const fs=require('fs'); ['dev','prod'].forEach(d=>{const dir=`dist/${d}`; if(!fs.existsSync(dir)) return; fs.readdirSync(dir).forEach(f=>{ try{fs.copyFileSync(`${dir}/${f}`,`dist/${f}`)}catch(e){ /* ignore */ } })})\"",
    "build:copy:dev": "node -e \"const fs=require('fs'); fs.readdirSync('dist/dev').forEach(f=>fs.copyFileSync(`dist/dev/${f}`,`dist/${f}`))\"",
    "build:copy:prod": "node -e \"const fs=require('fs'); fs.readdirSync('dist/prod').forEach(f=>fs.copyFileSync(`dist/prod/${f}`,`dist/${f}`))\"",
    "clean": "rimraf dist",
    "test": "vitest run --coverage",
    "test:watch": "vitest",
    "test:coverage": "vitest --coverage",
    "test:ui": "vitest --ui",
    "lint": "eslint ./src --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint ./src --report-unused-disable-directives --max-warnings 0 --fix",
    "lint:staged": "lint-staged",
    "typecheck": "tsc --noEmit",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "quality": "npm run typecheck && npm run lint && npm run format:check && npm run test",
    "validate": "npm run typecheck && npm run lint:fix && npm run format",
    "prebuild": "npm run typecheck && npm run lint:fix",
    "prebuild:full": "npm run deps:all && npm run validate && npm run test",
    "deps:check": "dependency-cruiser src --validate --config .dependency-cruiser.cjs",
    "deps:graph": "dependency-cruiser --config .dependency-cruiser.cjs --output-type dot src | dot -T svg > docs/dependency-graph.svg || dependency-cruiser --config .dependency-cruiser.cjs --output-type dot src | sfdp -T svg > docs/dependency-graph.svg",
    "deps:graph:dot": "dependency-cruiser --config .dependency-cruiser.cjs --output-type dot src > docs/dependency-graph.dot",
    "deps:json": "dependency-cruiser --config .dependency-cruiser.cjs --output-type json --output-to docs/dependency-graph.json src",
    "deps:all": "npm run deps:json && npm run deps:graph:dot && npm run deps:graph && npm run deps:check",
    "prepare": "husky",
    "postinstall": "npm run prepare"
  },
  "dependencies": {
    "@preact/signals": "2.3.1",
    "fflate": "0.8.2",
    "preact": "10.27.1"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/js": "^9.34.0",
    "@preact/preset-vite": "^2.10.2",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/preact": "^3.2.4",
    "@types/node": "^24.3.0",
    "@types/tampermonkey": "^5.0.4",
    "@typescript-eslint/eslint-plugin": "^8.41.0",
    "@typescript-eslint/parser": "^8.41.0",
    "@vitest/coverage-istanbul": "^3.2.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "autoprefixer": "^10.4.21",
    "canvas": "^3.2.0",
    "cssnano": "^7.1.1",
    "dependency-cruiser": "^17.0.1",
    "eslint": "^9.34.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-react": "^7.37.5",
    "husky": "^9.1.7",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.5",
    "postcss": "^8.5.6",
    "postcss-cli": "^11.0.1",
    "postcss-custom-properties": "^14.0.6",
    "prettier": "^3.6.2",
    "rimraf": "^6.0.1",
    "terser": "^5.43.1",
    "typescript": "^5.9.2",
    "vite": "^7.1.3",
    "vitest": "^3.2.4",
    "whatwg-url": "^14.2.0"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ],
    "*.{css,scss}": [
      "prettier --write"
    ]
  }
}
