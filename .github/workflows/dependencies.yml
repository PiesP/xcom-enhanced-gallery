name: Dependency Management

on:
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday
  workflow_dispatch:

jobs:
  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Check for updates
        run: |
          npm outdated --json > outdated.json 2>/dev/null || true
          if [ -s outdated.json ]; then
            echo "Updates available"
            cat outdated.json
            echo "HAS_UPDATES=true" >> $GITHUB_ENV
          else
            echo "No updates available"
            echo "HAS_UPDATES=false" >> $GITHUB_ENV
          fi

      - name: Security audit
        run: npm audit --audit-level=moderate

      - name: Analyze dependencies
        run: npm run deps:analyze

      - name: Create issue for updates
        if: env.HAS_UPDATES == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const outdated = JSON.parse(fs.readFileSync('outdated.json', 'utf8'));

            const updateList = Object.entries(outdated)
              .map(([pkg, info]) => `- ${pkg}: ${info.current} â†’ ${info.latest}`)
              .join('\n');

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸ“¦ Dependency Updates Available',
              body: `## Available Updates\n\n${updateList}\n\n*This issue was created automatically by the dependency management workflow.*`,
              labels: ['dependencies', 'maintenance']
            });
