name: Build and Release

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Quality Check
        run: npm run quality

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: quality-check
    strategy:
      matrix:
        mode: [development, production]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build (${{ matrix.mode }})
        run: |
          if [ "${{ matrix.mode }}" = "development" ]; then
            npm run build:dev
          else
            npm run build
          fi

      - name: Validate build
        run: node scripts/validate-build.js

      - name: Generate build metrics
        run: node scripts/build-metrics.js

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: userscript-${{ matrix.mode }}
          path: dist/
          retention-days: 30

      - name: Upload build metrics
        uses: actions/upload-artifact@v4
        with:
          name: build-metrics-${{ matrix.mode }}
          path: build-metrics.json
          retention-days: 7

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build release
        run: npm run build

      - name: Create release package
        run: npm run package

      - name: Generate checksums
        run: |
          cd release
          sha256sum *.js > checksums.txt
          cat checksums.txt

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            release/xcom-enhanced-gallery.user.js
            release/xcom-enhanced-gallery-*.user.js
            release/checksums.txt
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
