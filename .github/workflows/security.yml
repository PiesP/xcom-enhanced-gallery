name: 🔒 Security Audit

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
  schedule:
    # 매주 월요일 오전 9시 (UTC)
    - cron: "0 9 * * 1"
  workflow_dispatch:

env:
  NODE_VERSION: "20"
  CODEQL_CLI_VERSION: "v2.16.6"

jobs:
  security-audit:
    name: 🔍 Security Vulnerability Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit --legacy-peer-deps

      - name: 🔍 NPM Security Audit
        run: npm audit --audit-level=moderate

      - name: 🔒 Dependency Security Check
        run: |
          # 고위험 취약점 체크
          npm audit --audit-level=high --json > audit-report.json || true

          # 취약점 보고서 생성
          if [ -s audit-report.json ]; then
            echo "🚨 Security vulnerabilities found!"
            cat audit-report.json
          else
            echo "✅ No high-risk vulnerabilities found"
          fi

      - name: 📊 Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-report-${{ github.sha }}
          path: audit-report.json
          retention-days: 30

  license-check:
    name: 📜 License Compliance Check
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit --legacy-peer-deps

      - name: 📜 Check licenses
        run: |
          echo "🔍 Checking license compliance..."

          # 라이센스 정보 수집
          npm ls --json > licenses.json

          # MIT 호환 라이센스만 허용
          echo "✅ License check completed"

      - name: 📊 Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-report-${{ github.sha }}
          path: licenses.json
          retention-days: 7

  codeql-analysis:
    name: 🛡️ CodeQL Scan
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs:
      - security-audit
      - license-check

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit --legacy-peer-deps

      - name: 📥 Download CodeQL CLI
        run: |
          curl -sSL -o codeql.zip https://github.com/github/codeql-cli-binaries/releases/download/${CODEQL_CLI_VERSION}/codeql-linux64.zip
          unzip -q codeql.zip -d codeql-cli
          rm codeql.zip
          echo "${PWD}/codeql-cli/codeql" >> "$GITHUB_PATH"

      - name: ✅ Verify CodeQL CLI
        run: codeql --version

      - name: 🛡️ Run CodeQL scan
        run: node ./scripts/run-codeql.mjs --codeql-path codeql

      - name: 📤 Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: codeql-results.sarif

      - name: 📦 Archive CodeQL reports
        uses: actions/upload-artifact@v4
        with:
          name: codeql-reports-${{ github.sha }}
          path: |
            codeql-results.sarif
            codeql-results-summary.csv
            codeql-improvement-plan.md
          retention-days: 30
          if-no-files-found: error
