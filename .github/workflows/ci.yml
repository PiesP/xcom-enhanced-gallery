name: 🔍 CI Pipeline

on:
  push:
    branches: [master, develop, feature/*, fix/*, chore/*]
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "**/*.MD"
      - "**/*.txt"
      - "**/*.svg"
      - ".vscode/**"
  pull_request:
    branches: [master, develop]
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "**/*.MD"
      - "**/*.txt"
      - "**/*.svg"
      - ".vscode/**"
  workflow_dispatch:

env:
  NODE_VERSION: "20"
  CI: "true"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  commitlint:
    name: 📝 Commit message check
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 🧪 Commitlint (PR commits)
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: commitlint.config.cjs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  quality:
    name: 🔎 Lint & Typecheck
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit --legacy-peer-deps

      - name: 🔎 Type check
        run: npm run typecheck

      - name: 🧹 Lint
        run: npm run lint

      - name: 🎨 Prettier check
        run: npx --yes prettier --check .

      - name: 🧭 Dependency policy check
        run: npm run deps:check

  tests:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    needs: [quality]
    timeout-minutes: 20
    strategy:
      matrix:
        node-version: [20, 22]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit --legacy-peer-deps

      - name: 🧪 Run tests (Node ${{ matrix.node-version }})
        if: ${{ matrix.node-version != 20 }}
        run: npm run test:ci:node22

      - name: 🧪 Run tests with coverage (Node 20)
        if: ${{ matrix.node-version == 20 }}
        run: npm run test:coverage:ci

      - name: 📊 Upload coverage reports
        uses: actions/upload-artifact@v4
        if: ${{ success() && matrix.node-version == 20 }}
        with:
          name: coverage-report-${{ github.sha }}
          path: coverage/
          retention-days: 7

  build:
    name: 🏗️ Build & Validate
    runs-on: ubuntu-latest
    needs: [quality, tests]
    timeout-minutes: 15
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit --legacy-peer-deps

      - name: 🔨 Development build
        run: npm run build:dev

      - name: 🚀 Production build
        run: npm run build:prod

      - name: ✅ Validate build outputs
        run: node ./scripts/validate-build.js

      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: build-artifacts-${{ github.sha }}
          path: dist/
          retention-days: 7
