name: 🔍 CI Pipeline

on:
  push:
    branches: [master, develop, feature/*, fix/*, chore/*]
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "**/*.MD"
      - "**/*.txt"
      - "**/*.svg"
      - ".vscode/**"
  pull_request:
    branches: [master, develop]
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "**/*.MD"
      - "**/*.txt"
      - "**/*.svg"
      - ".vscode/**"
  workflow_dispatch:

env:
  CI: "true"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: 🧪 Code Quality & Build Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [20, 22] # Node.js 버전 호환성 테스트 (Node 18 제거)

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: � Install dependencies
        run: npm ci --prefer-offline --no-audit --legacy-peer-deps

      - name: 🧩 Install Graphviz (for SVG graphs)
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: �️ Generate dependency graphs (Node 20)
        if: ${{ matrix.node-version == 20 }}
        run: npm run deps:all

      - name: �🔎 Type check
        run: npm run typecheck

      - name: 🧹 Lint
        run: npm run lint

      - name: 🎨 Prettier check
        run: npx --yes prettier --check .

      - name: 🧪 Run tests (Node ${{ matrix.node-version }})
        if: ${{ matrix.node-version != 20 }}
        run: npm run test:ci

      - name: 🧪 Run tests with coverage (Node 20)
        if: ${{ matrix.node-version == 20 }}
        run: npm run test:coverage:ci

      - name: 📊 Upload coverage reports
        uses: actions/upload-artifact@v4
        if: ${{ success() && matrix.node-version == 20 }}
        with:
          name: coverage-report-${{ github.sha }}
          path: coverage/
          # CI에서 커버리지 디렉터리가 비어있는 경우 경고를 억제
          if-no-files-found: ignore
          retention-days: 7

      - name: 🏗️ Test builds
        run: |
          echo "🔨 Testing development build..."
          npm run build:dev

          echo "🚀 Testing production build..."
          npm run build:prod

      - name: ✅ Validate build outputs
        run: node ./scripts/validate-build.js

      - name: 📊 Upload build artifacts (Node 20 only)
        uses: actions/upload-artifact@v4
        # 매트릭스 병렬 실행 시 동일 이름 충돌(409) 방지를 위해 Node 20에서만 업로드
        if: ${{ success() && matrix.node-version == 20 }}
        with:
          name: build-artifacts-${{ github.sha }}
          path: dist/
          retention-days: 7

      - name: 📈 Upload dependency graphs (Node 20)
        uses: actions/upload-artifact@v4
        if: ${{ success() && matrix.node-version == 20 }}
        with:
          name: dependency-graphs-${{ github.sha }}
          path: |
            docs/dependency-graph.json
            docs/dependency-graph.dot
            docs/dependency-graph.svg
          retention-days: 7
