/**
 * 설정 모달 스타일 - Twitter 네이티브 UI 스타일
 * - 적절한 패딩/마진으로 텍스트와 경계선 간격 확보
 * - Twitter 브랜드 색상 및 간격 시스템 적용
 */

/* 테스트 호환: .modal 규칙이 파일 선두에 존재해야 하는 레거시 테스트 대응 */
.modal {
  display: flex;
  flex-direction: column;
  gap: 1.5em;
  gap: var(--xeg-comp-settings-modal-gap, 1.5em); /* 트위터 간격 시스템 적용 */
  border-radius: var(--xeg-radius-xl); /* 트위터 스타일 둥근 모서리 */
  padding: 2em; /* 충분한 내부 여백 */
  padding: var(--xeg-comp-settings-modal-padding, 2em);
  /* Use semantic tokens for primary styling */
  background: var(--xeg-modal-bg);
  border: 1px solid var(--xeg-modal-border);
}

.panel {
  position: fixed;
  top: calc(
    var(--xeg-comp-settings-modal-top-offset, 2em) +
      var(--xeg-comp-settings-modal-toolbar-offset, 3em)
  ); /* 툴바 아래 충분한 여유 */
  left: 50%;
  transform: translateX(-50%);
  z-index: var(--xeg-z-modal);
  display: flex;
  flex-direction: column;
  gap: 1.5em; /* 요소 간 넉넉한 간격 */
  gap: var(--xeg-comp-settings-modal-panel-gap, 1.5em);
  padding-block: 2em; /* 상하 충분한 패딩 */
  padding-block: var(--xeg-comp-settings-modal-panel-padding-block, 2em);
  padding-inline: 1.5em; /* 좌우 충분한 패딩 */
  padding-inline: var(--xeg-comp-settings-modal-panel-padding-inline, 1.5em);
  min-width: 20em; /* 최소 너비 증가 */
  max-width: 28em; /* 최대 너비 증가 */
  border-radius: var(--xeg-radius-xl); /* 트위터 스타일 둥근 모서리 */
  box-shadow: var(--xeg-shadow-lg); /* 디자인 토큰 기반 그림자 */
  transition: var(--xeg-transition-fast);
  /* Use semantic tokens for primary styling */
  background: var(--xeg-modal-bg);
  border: 1px solid var(--xeg-modal-border);
}

/* 내부 컨테이너 (레이아웃만) */
.inner {
  display: flex;
  flex-direction: column;
  gap: 1.5em; /* 일관된 간격 */
  gap: var(--xeg-comp-settings-modal-inner-gap, 1.5em);
  padding: 1em; /* 추가 내부 패딩 */
  padding: var(--xeg-comp-settings-modal-inner-padding, 1em);
}

/* 레거시 위치 클래스 (테스트 기대) */
.center {
  /* center 위치 스타일 명시적 정의 */
  left: 50%;
  transform: translateX(-50%);
  top: calc(
    var(--xeg-comp-settings-modal-top-offset, 2em) +
      var(--xeg-comp-settings-modal-toolbar-offset, 3em)
  );
}

.bottomSheet {
  /* bottomSheet 스타일 명시적 정의 */
  bottom: 0.75em;
  top: auto;
  left: 50%;
  transform: translateX(-50%);
  width: calc(100vw - 2em);
  max-width: 32em;
}

[data-position='top-right'].panel,
.topRight.panel {
  left: auto;
  right: 1.25em;
  transform: none;
}

.toolbarBelow.panel,
[data-position='toolbar-below'].panel {
  /* default layout already defined in .panel */
  /* ensure rule non-empty for lint */
  transform: translateX(-50%);
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1.5em;
  gap: var(--xeg-comp-settings-modal-header-gap, 1.5em);
  padding-bottom: 1em;
  padding-bottom: var(--xeg-comp-settings-modal-header-padding-block-end, 1em);
  border-bottom: 1px solid var(--xeg-modal-border);
  margin-bottom: 1.5em;
  margin-bottom: var(--xeg-comp-settings-modal-header-margin-block-end, 1.5em);
}

.title {
  margin: 0;
  font-size: 1.25em;
  font-weight: 700;
  color: var(--xeg-color-text-primary);
  letter-spacing: -0.02em;
}

.body {
  display: flex;
  flex-direction: column;
  gap: 2em;
  gap: var(--xeg-comp-settings-modal-body-gap, 2em);
}

.setting {
  display: flex;
  flex-direction: column;
  gap: 1em;
  gap: var(--xeg-comp-settings-modal-setting-gap, 1em);
  padding: 1em;
  padding: var(--xeg-comp-settings-modal-setting-padding, 1em);
  border-radius: var(--xeg-radius-lg);
  background: var(--xeg-color-bg-hover);
  border: 1px solid var(--xeg-color-border-primary);
}

.label {
  font-size: 0.9375em;
  font-weight: 600;
  /* '설정' 타이틀과 동일한 색상 계열 적용(Primary) */
  color: var(--xeg-color-text-primary);
  letter-spacing: 0.01em;
  margin-bottom: 0.25em;
  margin-bottom: var(--xeg-comp-settings-modal-label-margin-block-end, 0.25em);
  text-transform: uppercase;
  border-radius: var(--xeg-radius-sm);
}

.formControl {
  --xeg-control-gap: var(--xeg-form-control-gap, var(--xeg-spacing-xs));
  --xeg-control-padding-block: var(--xeg-form-control-padding-block);
  --xeg-control-padding-inline: var(--xeg-form-control-padding-inline);
  --xeg-control-font-size: var(--xeg-form-control-font-size);
  --xeg-control-font-weight: var(--xeg-form-control-font-weight);
  --xeg-control-bg: var(--xeg-form-control-bg);
  --xeg-control-bg-hover: var(--xeg-form-control-bg-hover);
  --xeg-control-bg-active: var(--xeg-form-control-bg-active);
  --xeg-control-border: var(--xeg-form-control-border);
  --xeg-control-border-hover: var(--xeg-form-control-border-hover);
  --xeg-control-border-active: var(--xeg-form-control-border-active);
  --xeg-control-color: var(--xeg-form-control-color);
  --xeg-control-color-hover: var(--xeg-form-control-color-hover);
  --xeg-control-shadow: var(--xeg-form-control-shadow);
  --xeg-control-shadow-hover: var(--xeg-form-control-shadow-hover);
  --xeg-control-shadow-active: var(--xeg-form-control-shadow-active);
  --xeg-control-radius: var(--xeg-form-control-radius);
  --xeg-control-focus-outline: var(--xeg-form-control-focus-outline);
  --xeg-control-focus-offset: var(--xeg-form-control-focus-offset);
  --xeg-control-disabled-opacity: var(--xeg-form-control-disabled-opacity);
  min-width: 10.5em;
}

.select {
  width: auto;
  min-width: 11.5em;
  font-size: var(--xeg-form-control-font-size, 0.875em);
  color: var(--xeg-form-control-color);
  background: var(--xeg-form-control-bg);
  border: 1px solid var(--xeg-form-control-border);
  border-radius: var(--xeg-form-control-radius);
  transition: var(--xeg-transition-fast);
  appearance: none;
  padding-right: calc(var(--xeg-form-control-padding-inline, 0.75em) * 2);
  background-image:
    linear-gradient(45deg, transparent 50%, currentColor 50%),
    linear-gradient(135deg, currentColor 50%, transparent 50%);
  background-position:
    calc(100% - 1.1em) 50%,
    calc(100% - 0.7em) 50%;
  background-size:
    0.45em 0.45em,
    0.45em 0.45em;
  background-repeat: no-repeat;
  cursor: pointer;
}

.select:hover {
  background: var(--xeg-form-control-bg-hover);
  border-color: var(--xeg-form-control-border-hover);
  box-shadow: var(--xeg-form-control-shadow-hover);
  color: var(--xeg-form-control-color-hover);
}

.select:active {
  background: var(--xeg-form-control-bg-active);
  border-color: var(--xeg-form-control-border-active);
  box-shadow: var(--xeg-form-control-shadow-active);
}

.select:disabled {
  opacity: var(--xeg-form-control-disabled-opacity);
  cursor: not-allowed;
  box-shadow: none;
}

.select::-ms-expand {
  display: none;
}

.formControlToggle {
  --_toggle-size: var(--xeg-form-control-toggle-size);
  appearance: none;
  width: var(--_toggle-size);
  height: var(--_toggle-size);
  border-radius: var(--xeg-form-control-radius);
  border: 1px solid var(--xeg-form-control-border);
  background: var(--xeg-form-control-bg);
  color: var(--xeg-form-control-color);
  box-shadow: var(--xeg-form-control-shadow);
  transition: var(--xeg-transition-fast);
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  accent-color: var(--xeg-form-control-accent);
}

.formControlToggle::after {
  content: '';
  width: calc(var(--_toggle-size) * 0.45);
  height: calc(var(--_toggle-size) * 0.25);
  border-left: var(--xeg-form-control-check-weight) solid var(--xeg-form-control-check-color);
  border-bottom: var(--xeg-form-control-check-weight) solid var(--xeg-form-control-check-color);
  transform: rotate(-45deg) scale(0.75);
  opacity: 0;
  transition:
    transform var(--xeg-duration-fast) var(--xeg-easing-ease-out),
    opacity var(--xeg-duration-fast) var(--xeg-easing-ease-out);
  transform-origin: center;
}

.formControlToggle:hover {
  background: var(--xeg-form-control-bg-hover);
  border-color: var(--xeg-form-control-border-hover);
  box-shadow: var(--xeg-form-control-shadow-hover);
}

.formControlToggle:active {
  background: var(--xeg-form-control-bg-active);
  border-color: var(--xeg-form-control-border-active);
  box-shadow: var(--xeg-form-control-shadow-active);
}

.formControlToggle:checked {
  background: var(--xeg-form-control-checked-bg);
  border-color: var(--xeg-form-control-checked-border);
  box-shadow: var(--xeg-form-control-shadow-active);
}

.formControlToggle:checked::after {
  opacity: 1;
  transform: rotate(-45deg) scale(1);
}

.formControlToggle:disabled {
  opacity: var(--xeg-form-control-disabled-opacity);
  cursor: not-allowed;
  box-shadow: none;
}

/* 닫기 버튼 (테스트 검증용 크기/레이아웃만 정의) */
.closeButton {
  /* IconButton로 대체되므로 보조 레이아웃만 유지 - 토큰 기반 */
  /* 테스트(settings-modal-unit-consistency): width/height 2.5em 직접 명시 요구 → 토큰 + 명시적 값 병행 */
  width: 2.5em; /* equals var(--xeg-size-toolbar-button) */
  height: 2.5em; /* equals var(--xeg-size-toolbar-button) */
  /* 토큰 선언 유지 (우선순위 동일, 중복 허용) */
  width: var(--xeg-size-toolbar-button);
  height: var(--xeg-size-toolbar-button);
  min-width: var(--xeg-size-toolbar-button);
  min-height: var(--xeg-size-toolbar-button);
  border-radius: var(--xeg-radius-md);
}

.closeButton:hover {
  /* IconButton가 자체 호버를 처리하므로 미세 이동만 허용 */
  transform: translateY(-0.0625em);
}
.formControlToggle:focus-visible,
.closeButton:focus-visible,
.select:focus-visible {
  outline: var(--xeg-focus-ring);
  outline: var(--xeg-form-control-focus-outline, var(--xeg-focus-ring));
  outline-offset: var(--xeg-focus-ring-offset);
  outline-offset: var(--xeg-form-control-focus-offset, var(--xeg-focus-ring-offset));
}

@media (max-width: 48em) {
  .panel {
    top: auto;
    bottom: 0.75em;
    left: 50%;
    transform: translateX(-50%);
    width: calc(100vw - 2em);
    max-width: 32em;
    border-radius: var(--xeg-radius-xl);
  }
  [data-position='top-right'].panel {
    right: 50%;
    transform: translateX(50%);
  }
}

@media (prefers-reduced-motion: reduce) {
  .panel {
    transition: none;
    animation: none;
  }
}

@media (prefers-contrast: high) {
  .panel {
    background: Canvas;
    border: 2px solid CanvasText;
    backdrop-filter: none;
    -webkit-backdrop-filter: none;
  }

  .select,
  .formControlToggle {
    background: Canvas;
    border-color: CanvasText;
    color: CanvasText;
    box-shadow: none;
  }
}
