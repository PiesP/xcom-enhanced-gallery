/**
 * VerticalImageItem Component Styles
 * @version 3.0.0 - Phase 4 최적화 및 표준화
 * @description 성능 최적화된 수직 이미지 아이템 스타일
 */

.container {
  position: relative;
  margin-bottom: var(--xeg-spacing-md);
  border-radius: var(--xeg-radius-lg);
  overflow: visible;
  transition: var(--xeg-transition-normal);
  cursor: pointer;
  border: 1px solid var(--xeg-media-glass-border);
  background: var(--xeg-media-glass-bg);
  padding: var(--xeg-spacing-sm);
  width: 100%;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  pointer-events: auto;

  /* 글래스모피즘 효과 */
  backdrop-filter: var(--xeg-media-glass-blur);
  -webkit-backdrop-filter: var(--xeg-media-glass-blur);
  box-shadow: var(--xeg-media-glass-shadow);

  /* 성능 최적화 */
  transform: translateZ(0);
  will-change: transform, box-shadow;
  contain: layout style;

  /* 통합된 포커스/활성 상태 처리 - 기본 outline 제거 */
  outline: none;
}

.container:hover {
  transform: var(--xeg-hover-lift);
  background: var(--xeg-color-surface-elevated);
  border-color: var(--xeg-glass-border-medium);
  box-shadow: var(--xeg-glass-shadow-medium), var(--xeg-shadow-md);
}

/* 포커스 상태 - outline 대신 box-shadow 사용 */
.container:focus-visible {
  box-shadow: var(--xeg-focus-shadow);
  border-radius: var(--xeg-radius-lg);
}

/**
 * Epic A11Y-FOCUS-ROLES: 활성 상태 (.active)
 * @description 사용자가 명시적으로 선택한 아이템 (클릭 또는 키보드 네비게이션)
 * @visual 강한 시각적 강조 (2px border) - 현재 사용자 조작 대상
 * @behavior 키보드 네비게이션(ArrowUp/Down, Home/End)에 따라 동적으로 변경됨
 */
.container.active {
  box-shadow: var(--xeg-active-shadow);
  border-radius: var(--xeg-radius-lg);
  transition: var(--xeg-transition-fast);
  transform: translateZ(0);
}

/* 활성+포커스 상태 - 중복 제거 */
.container.active:focus-visible {
  box-shadow: var(--xeg-active-shadow);
}

/**
 * Epic A11Y-FOCUS-ROLES: 포커스된 상태 (.focused)
 * @description 갤러리 열림 시 자동 스크롤 대상 아이템 (startIndex와 일치)
 * @visual 가벼운 시각적 표시 (1px border) - 시작점 마커
 * @behavior 갤러리가 열릴 때 한 번만 설정되고 이후 변경되지 않음 (정적)
 * @note .active와 .focused는 동시에 적용될 수 있음 (startIndex로 열린 경우)
 */
.container.focused {
  box-shadow: var(--xeg-focus-shadow);
  border-radius: var(--xeg-radius-lg);
  transition: var(--xeg-transition-fast);
}

/**
 * Epic AUTO-FOCUS-UPDATE (Phase 2-1): 가시 영역 상태 (.visible)
 * @description 뷰포트 가시 영역에 있는 아이템 (IntersectionObserver 기반)
 * @visual 시각적 힌트 (border + shadow + background) - Soft Focus
 * @behavior 자동 스크롤 없이 시각적 강조만 제공
 * @a11y aria-current="true" 설정 (스크린 리더 피드백)
 * @note .active, .focused와 독립적으로 동작 (동시 적용 가능)
 */
.container.visible {
  border: var(--xeg-item-visible-border);
  box-shadow: var(--xeg-item-visible-shadow);
  background: var(--xeg-item-visible-bg);
}

.imageWrapper {
  position: relative;
  background: var(--xeg-color-bg-secondary);
  /* 이미지 크기에 맞는 컨테이너 */
  width: fit-content;
  max-width: 100%;
  margin: 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: var(--xeg-spacing-3xl);
  /* CLS: 초기 레이아웃 안정성을 위한 기본 종횡비 예약 */
  aspect-ratio: var(--xeg-aspect-default);
}

.placeholder {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  /* Skeleton: 토큰화된 배경/모션 사용 */
  background: var(--xeg-skeleton-bg);
  min-height: var(--xeg-spacing-3xl);
}

.loadingSpinner {
  width: var(--xeg-spacing-lg);
  height: var(--xeg-spacing-lg);
  border: 2px solid var(--xeg-color-border-primary);
  border-top: 2px solid var(--xeg-color-primary);
  border-radius: var(--xeg-radius-full);
  /* Skeleton: 토큰화된 duration/easing 사용 */
  animation: xeg-spin var(--xeg-duration-normal) var(--xeg-easing-linear) infinite;
}

.image {
  display: block;
  border-radius: var(--xeg-radius-md);
  /* 기본 스타일 - JavaScript에서 동적으로 크기 조정 */
  object-fit: contain;
  /* 컨텍스트 메뉴 허용을 위해 pointer-events 활성화 */
  pointer-events: auto;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  /* 드래그 방지를 위한 추가 속성 */
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  /* GPU 가속을 위한 3D 변환 */
  transform: translateZ(0);
  will-change: opacity;
}

/* Loading/Loaded state transitions (tokenized) */
.loading.image,
.loading.video {
  opacity: 0;
}

.loaded.image,
.loaded.video {
  opacity: 1;
}

.image,
.video {
  transition: opacity var(--xeg-duration-normal) var(--xeg-easing-ease-out);
}

/* 이미지 크기 조정 모드별 스타일 */
.image.fitOriginal {
  width: auto !important;
  height: auto !important;
  max-width: none !important;
  max-height: none !important;
  object-fit: none;
}

.image.fitWidth {
  width: 100%;
  height: auto;
  max-width: 100vw;
  object-fit: contain;
}

.image.fitHeight {
  width: auto;
  height: auto;
  max-height: var(--xeg-viewport-height-constrained); /* 스크롤 방지를 위해 적절한 높이 제한 */
  object-fit: contain;
}

.image.fitContainer {
  width: 100%;
  height: auto;
  max-width: 100vw;
  max-height: var(--xeg-viewport-height-constrained); /* 스크롤 방지를 위해 적절한 높이 제한 */
  object-fit: contain;
}

.errorState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--xeg-spacing-3xl) var(--xeg-spacing-lg);
  background: var(--xeg-color-bg-secondary);
  color: var(--xeg-color-text-secondary);
  min-height: var(--xeg-spacing-3xl);
}

.errorIcon {
  font-size: var(--xeg-font-size-2xl);
  margin-bottom: var(--xeg-spacing-sm);
}

.errorText {
  font-size: var(--xeg-font-size-sm);
  text-align: center;
}

.overlay {
  position: absolute;
  top: var(--xeg-spacing-sm);
  right: var(--xeg-spacing-sm);
  display: flex;
  gap: var(--xeg-spacing-sm);
  opacity: 0;
  transition: var(--xeg-transition-opacity);
}

.container:hover .overlay {
  opacity: 1;
}

.indexBadge {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: var(--xeg-spacing-lg);
  height: var(--xeg-spacing-lg);
  background: var(--xeg-color-overlay-medium);
  color: var(--xeg-color-text-inverse);
  font-size: var(--xeg-font-size-xs);
  font-weight: var(--xeg-font-weight-semibold);
  border-radius: var(--xeg-radius-lg);
  padding: 0 var(--xeg-spacing-sm);
}

.downloadButton {
  position: absolute;
  top: var(--xeg-spacing-sm);
  right: var(--xeg-spacing-sm);
  background: var(--xeg-color-overlay-medium);
  color: var(--xeg-color-text-inverse);
  border: none;
  border-radius: var(--xeg-radius-full);
  width: var(--xeg-button-height-sm);
  height: var(--xeg-button-height-sm);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  opacity: 0;
  transition: var(--xeg-transition-opacity);
  font-size: var(--xeg-font-size-md);
}

.container:hover .downloadButton {
  opacity: 1;
}

.downloadButton:hover {
  background: var(--xeg-color-overlay-strong);
  transform: var(--xeg-hover-lift);
}

.downloadIcon {
  display: block;
}

.error {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: var(--xeg-color-bg-secondary);
  color: var(--xeg-color-text-secondary);
  min-height: var(--xeg-spacing-3xl);
}

/* State classes */
.container.loaded .image {
  opacity: 1;
}

.container.error {
  border: 1px solid var(--xeg-color-error);
}

/* 원본 크기 모드의 컨테이너별 조정 */
.container.fitOriginal .imageWrapper {
  width: fit-content;
  max-width: 100vw;
  max-height: var(--xeg-viewport-height-constrained);
  overflow: auto; /* 필요 시에만 스크롤 */
  /* 스크롤바 스타일링 */
  scrollbar-width: thin;
  scrollbar-color: var(--xeg-color-overlay-light) transparent;
}

.container.fitWidth .imageWrapper {
  width: 100%;
}

.container.fitHeight .imageWrapper {
  width: fit-content;
  max-width: 100%;
}

.container.fitContainer .imageWrapper {
  width: 100%;
}

.container.fitOriginal .imageWrapper::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.container.fitOriginal .imageWrapper::-webkit-scrollbar-track {
  background: transparent;
}

.container.fitOriginal .imageWrapper::-webkit-scrollbar-thumb {
  background: var(--xeg-color-overlay-light);
  border-radius: var(--xeg-radius-sm);
  transition: var(--xeg-transition-normal);
}

.container.fitOriginal .imageWrapper::-webkit-scrollbar-thumb:hover {
  background: var(--xeg-color-overlay-medium);
}

.container.fitOriginal .image {
  cursor: grab; /* 드래그 가능함을 표시 */
  min-width: auto;
  min-height: auto;
}

.container.fitOriginal .image:active {
  cursor: grabbing;
}

/* 다운로드 버튼만 클릭 가능 */
.downloadButton {
  /* 다운로드 버튼만 클릭 가능 */
  pointer-events: auto;
}

/* 이벤트 전파 차단을 위한 CSS 클래스 */
.eventBlocked {
  pointer-events: none !important;
}

/* Twitter 기본 UI 요소 차단 */
.container ~ [data-testid],
.container ~ [role='dialog'],
.container ~ .r-1p0dtai {
  pointer-events: none !important;
  z-index: var(--xeg-z-tooltip) !important;
}

/* Video wrapper styling */
.video {
  width: 100%;
  height: auto;
  border-radius: var(--xeg-radius-md);
  overflow: hidden;
}

/* Video fit modes */
.video.fitOriginal {
  width: auto !important;
  height: auto !important;
  max-width: none !important;
  max-height: none !important;
  object-fit: none;
}

.video.fitWidth {
  width: 100%;
  height: auto;
  max-width: 100vw;
  object-fit: contain;
}

.video.fitHeight {
  width: auto;
  height: auto;
  max-height: var(--xeg-viewport-height-constrained);
  object-fit: contain;
}

.video.fitContainer {
  width: 100%;
  height: auto;
  max-width: 100vw;
  max-height: var(--xeg-viewport-height-constrained);
  object-fit: contain;
}

/* === 접근성 향상 === */

/* 고대비 모드 지원 */
@media (prefers-contrast: high) {
  .container {
    border: 2px solid HighlightText;
    background: Canvas;
    color: CanvasText;
  }

  .container:focus-visible,
  .container.active,
  .container.focused {
    border-color: Highlight;
    box-shadow: var(--shadow-md);
  }

  .downloadButton {
    background: ButtonFace;
    color: ButtonText;
    border: 1px solid ButtonText;
  }

  .error {
    background: Canvas;
    color: CanvasText;
    border: 1px solid CanvasText;
  }
}

/* 모션 감소 모드 지원 */
@media (prefers-reduced-motion: reduce) {
  .container {
    transition: none;
    will-change: auto;
  }

  .container:hover {
    transform: none;
  }

  .image,
  .video {
    transition: none;
  }

  .loadingSpinner {
    animation: none;
  }

  /* 정적 로딩 표시 */
  .loadingSpinner::after {
    content: '⏳';
    font-size: 2rem;
  }
}

/* 다크 모드 지원 */
@media (prefers-color-scheme: dark) {
  .container {
    background: var(--xeg-color-bg-secondary-dark);
  }

  .placeholder {
    background: var(--xeg-color-bg-tertiary-dark);
  }

  .error {
    background: var(--xeg-color-bg-error-dark);
    color: var(--xeg-color-text-error-dark);
  }
}

/* 강제 색상 모드 지원 (Windows 고대비 모드) */
@media (forced-colors: active) {
  .container {
    border: 1px solid ButtonText;
    background: ButtonFace;
    forced-color-adjust: none;
  }

  .container:focus-visible,
  .container.active {
    border: 2px solid Highlight;
    background: HighlightText;
  }

  .downloadButton {
    background: ButtonFace;
    color: ButtonText;
    border: 1px solid ButtonText;
    forced-color-adjust: none;
  }
}
